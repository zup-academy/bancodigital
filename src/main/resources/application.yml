server:
  port: 8081
application:
  name: bancodigital
spring:
  datasource:
    url: "jdbc:postgresql://localhost:5432/bancodigital"
    password: admin
    username: admin
    driver-class-name: org.postgresql.Driver
  jpa:
    ddl-auto: create
    generate-ddl: true
    show-sql: false
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
management:
  health:
    db:
      enabled: true
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: health, info, metrics

  autoconfigure:
    exclude:
      - org.springframework.cloud.aws.autoconfigure.context.ContextRegionProviderAutoConfiguration
      - org.springframework.cloud.aws.autoconfigure.context.ContextInstanceDataAutoConfiguration
      - org.springframework.cloud.aws.autoconfigure.context.ContextStackAutoConfiguration
      - org.springframework.cloud.aws.autoconfigure.context.ContextCredentialsAutoConfiguration

cloud:
  aws:
    stack:
      auto: false
    region:
      static: sa-east-1
      auto: false
    credentials:
      access-key: fakeAccessKeyId
      secret-key: fakeSecretAccessKey
    end-point:
      uri: http://localhost:4566
    queue:
      name: pagamentos_realizados